/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface AdManagerInterface extends ethers.utils.Interface {
  functions: {
    "adOn(uint256)": FunctionFragment;
    "ads(uint256)": FunctionFragment;
    "allowAd(uint256,address)": FunctionFragment;
    "allowOverAd(uint256,address)": FunctionFragment;
    "clientList(uint256,uint256)": FunctionFragment;
    "getAdInfo(uint256)": FunctionFragment;
    "getAdStatus(uint256)": FunctionFragment;
    "getAllAdInfo()": FunctionFragment;
    "getClientInfo(uint256)": FunctionFragment;
    "getClientInfoByPublisher()": FunctionFragment;
    "isPublisher(address)": FunctionFragment;
    "owner()": FunctionFragment;
    "publisherId(address,uint256)": FunctionFragment;
    "registerAd(string,string,string,string,uint256,uint256,uint256,uint256,uint256,uint256)": FunctionFragment;
    "registerClient(uint256,string,string,string)": FunctionFragment;
    "registerOverClient(uint256,string,string,string)": FunctionFragment;
    "setPublisher(address,bool)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "adOn", values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: "ads", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "allowAd",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "allowOverAd",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "clientList",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getAdInfo",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getAdStatus",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getAllAdInfo",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getClientInfo",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getClientInfoByPublisher",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "isPublisher", values: [string]): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "publisherId",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "registerAd",
    values: [
      string,
      string,
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "registerClient",
    values: [BigNumberish, string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "registerOverClient",
    values: [BigNumberish, string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setPublisher",
    values: [string, boolean]
  ): string;

  decodeFunctionResult(functionFragment: "adOn", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ads", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "allowAd", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "allowOverAd",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "clientList", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getAdInfo", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getAdStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAllAdInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getClientInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getClientInfoByPublisher",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isPublisher",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "publisherId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "registerAd", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "registerClient",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "registerOverClient",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPublisher",
    data: BytesLike
  ): Result;

  events: {
    "AdPurchased(uint256,address,string,uint256,uint256,uint256,uint256)": EventFragment;
    "AdRegistered(uint256,address,string,string,string,string,uint256,uint256,uint256,uint256,uint256,uint256)": EventFragment;
    "ClientRegistered(address,uint256,string,string,string,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AdPurchased"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AdRegistered"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ClientRegistered"): EventFragment;
}

export class AdManager extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: AdManagerInterface;

  functions: {
    adOn(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        adId: BigNumber;
        clientAddress: string;
        clientIpfs: string;
        adPrice: BigNumber;
        startTime: BigNumber;
        guaranteeTime: BigNumber;
        expireTime: BigNumber;
      }
    >;

    ads(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        string,
        string,
        string,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        adId: BigNumber;
        publisherAddress: string;
        publisherIpfs: string;
        publisherProject: string;
        network: string;
        location: string;
        x_size: BigNumber;
        y_size: BigNumber;
        mindate: BigNumber;
        maxdate: BigNumber;
        dau: BigNumber;
        minprice: BigNumber;
      }
    >;

    allowAd(
      _adId: BigNumberish,
      _clientAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    allowOverAd(
      _adId: BigNumberish,
      _clientAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    clientList(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, string, string, string, string, BigNumber] & {
        adId: BigNumber;
        clientAddress: string;
        clientIpfs: string;
        clientProject: string;
        clientDescription: string;
        paidETH: BigNumber;
      }
    >;

    getAdInfo(
      _adId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          string,
          string,
          string,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          adId: BigNumber;
          publisherAddress: string;
          publisherIpfs: string;
          publisherProject: string;
          network: string;
          location: string;
          x_size: BigNumber;
          y_size: BigNumber;
          mindate: BigNumber;
          maxdate: BigNumber;
          dau: BigNumber;
          minprice: BigNumber;
        }
      ]
    >;

    getAdStatus(
      _adId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          adId: BigNumber;
          clientAddress: string;
          clientIpfs: string;
          adPrice: BigNumber;
          startTime: BigNumber;
          guaranteeTime: BigNumber;
          expireTime: BigNumber;
        }
      ]
    >;

    getAllAdInfo(
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          string,
          string,
          string,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          adId: BigNumber;
          publisherAddress: string;
          publisherIpfs: string;
          publisherProject: string;
          network: string;
          location: string;
          x_size: BigNumber;
          y_size: BigNumber;
          mindate: BigNumber;
          maxdate: BigNumber;
          dau: BigNumber;
          minprice: BigNumber;
        })[]
      ]
    >;

    getClientInfo(
      _adId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([BigNumber, string, string, string, string, BigNumber] & {
          adId: BigNumber;
          clientAddress: string;
          clientIpfs: string;
          clientProject: string;
          clientDescription: string;
          paidETH: BigNumber;
        })[]
      ]
    >;

    getClientInfoByPublisher(
      overrides?: CallOverrides
    ): Promise<
      [
        ([BigNumber, string, string, string, string, BigNumber] & {
          adId: BigNumber;
          clientAddress: string;
          clientIpfs: string;
          clientProject: string;
          clientDescription: string;
          paidETH: BigNumber;
        })[]
      ]
    >;

    isPublisher(arg0: string, overrides?: CallOverrides): Promise<[boolean]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    publisherId(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    registerAd(
      _publisherIpfs: string,
      _publisherProject: string,
      _network: string,
      _location: string,
      _x_size: BigNumberish,
      _y_size: BigNumberish,
      _mindate: BigNumberish,
      _maxdate: BigNumberish,
      _dau: BigNumberish,
      _minprice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    registerClient(
      _adId: BigNumberish,
      _clientIpfs: string,
      _clientProject: string,
      _clientDescription: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    registerOverClient(
      _adId: BigNumberish,
      _clientIpfs: string,
      _clientProject: string,
      _clientDescription: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setPublisher(
      _publisher: string,
      _isActive: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  adOn(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, string, string, BigNumber, BigNumber, BigNumber, BigNumber] & {
      adId: BigNumber;
      clientAddress: string;
      clientIpfs: string;
      adPrice: BigNumber;
      startTime: BigNumber;
      guaranteeTime: BigNumber;
      expireTime: BigNumber;
    }
  >;

  ads(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      BigNumber,
      string,
      string,
      string,
      string,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      adId: BigNumber;
      publisherAddress: string;
      publisherIpfs: string;
      publisherProject: string;
      network: string;
      location: string;
      x_size: BigNumber;
      y_size: BigNumber;
      mindate: BigNumber;
      maxdate: BigNumber;
      dau: BigNumber;
      minprice: BigNumber;
    }
  >;

  allowAd(
    _adId: BigNumberish,
    _clientAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  allowOverAd(
    _adId: BigNumberish,
    _clientAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  clientList(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, string, string, string, string, BigNumber] & {
      adId: BigNumber;
      clientAddress: string;
      clientIpfs: string;
      clientProject: string;
      clientDescription: string;
      paidETH: BigNumber;
    }
  >;

  getAdInfo(
    _adId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      BigNumber,
      string,
      string,
      string,
      string,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      adId: BigNumber;
      publisherAddress: string;
      publisherIpfs: string;
      publisherProject: string;
      network: string;
      location: string;
      x_size: BigNumber;
      y_size: BigNumber;
      mindate: BigNumber;
      maxdate: BigNumber;
      dau: BigNumber;
      minprice: BigNumber;
    }
  >;

  getAdStatus(
    _adId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, string, string, BigNumber, BigNumber, BigNumber, BigNumber] & {
      adId: BigNumber;
      clientAddress: string;
      clientIpfs: string;
      adPrice: BigNumber;
      startTime: BigNumber;
      guaranteeTime: BigNumber;
      expireTime: BigNumber;
    }
  >;

  getAllAdInfo(
    overrides?: CallOverrides
  ): Promise<
    ([
      BigNumber,
      string,
      string,
      string,
      string,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      adId: BigNumber;
      publisherAddress: string;
      publisherIpfs: string;
      publisherProject: string;
      network: string;
      location: string;
      x_size: BigNumber;
      y_size: BigNumber;
      mindate: BigNumber;
      maxdate: BigNumber;
      dau: BigNumber;
      minprice: BigNumber;
    })[]
  >;

  getClientInfo(
    _adId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([BigNumber, string, string, string, string, BigNumber] & {
      adId: BigNumber;
      clientAddress: string;
      clientIpfs: string;
      clientProject: string;
      clientDescription: string;
      paidETH: BigNumber;
    })[]
  >;

  getClientInfoByPublisher(
    overrides?: CallOverrides
  ): Promise<
    ([BigNumber, string, string, string, string, BigNumber] & {
      adId: BigNumber;
      clientAddress: string;
      clientIpfs: string;
      clientProject: string;
      clientDescription: string;
      paidETH: BigNumber;
    })[]
  >;

  isPublisher(arg0: string, overrides?: CallOverrides): Promise<boolean>;

  owner(overrides?: CallOverrides): Promise<string>;

  publisherId(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  registerAd(
    _publisherIpfs: string,
    _publisherProject: string,
    _network: string,
    _location: string,
    _x_size: BigNumberish,
    _y_size: BigNumberish,
    _mindate: BigNumberish,
    _maxdate: BigNumberish,
    _dau: BigNumberish,
    _minprice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  registerClient(
    _adId: BigNumberish,
    _clientIpfs: string,
    _clientProject: string,
    _clientDescription: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  registerOverClient(
    _adId: BigNumberish,
    _clientIpfs: string,
    _clientProject: string,
    _clientDescription: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setPublisher(
    _publisher: string,
    _isActive: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    adOn(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        adId: BigNumber;
        clientAddress: string;
        clientIpfs: string;
        adPrice: BigNumber;
        startTime: BigNumber;
        guaranteeTime: BigNumber;
        expireTime: BigNumber;
      }
    >;

    ads(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        string,
        string,
        string,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        adId: BigNumber;
        publisherAddress: string;
        publisherIpfs: string;
        publisherProject: string;
        network: string;
        location: string;
        x_size: BigNumber;
        y_size: BigNumber;
        mindate: BigNumber;
        maxdate: BigNumber;
        dau: BigNumber;
        minprice: BigNumber;
      }
    >;

    allowAd(
      _adId: BigNumberish,
      _clientAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    allowOverAd(
      _adId: BigNumberish,
      _clientAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    clientList(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, string, string, string, string, BigNumber] & {
        adId: BigNumber;
        clientAddress: string;
        clientIpfs: string;
        clientProject: string;
        clientDescription: string;
        paidETH: BigNumber;
      }
    >;

    getAdInfo(
      _adId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        string,
        string,
        string,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        adId: BigNumber;
        publisherAddress: string;
        publisherIpfs: string;
        publisherProject: string;
        network: string;
        location: string;
        x_size: BigNumber;
        y_size: BigNumber;
        mindate: BigNumber;
        maxdate: BigNumber;
        dau: BigNumber;
        minprice: BigNumber;
      }
    >;

    getAdStatus(
      _adId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        adId: BigNumber;
        clientAddress: string;
        clientIpfs: string;
        adPrice: BigNumber;
        startTime: BigNumber;
        guaranteeTime: BigNumber;
        expireTime: BigNumber;
      }
    >;

    getAllAdInfo(
      overrides?: CallOverrides
    ): Promise<
      ([
        BigNumber,
        string,
        string,
        string,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        adId: BigNumber;
        publisherAddress: string;
        publisherIpfs: string;
        publisherProject: string;
        network: string;
        location: string;
        x_size: BigNumber;
        y_size: BigNumber;
        mindate: BigNumber;
        maxdate: BigNumber;
        dau: BigNumber;
        minprice: BigNumber;
      })[]
    >;

    getClientInfo(
      _adId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([BigNumber, string, string, string, string, BigNumber] & {
        adId: BigNumber;
        clientAddress: string;
        clientIpfs: string;
        clientProject: string;
        clientDescription: string;
        paidETH: BigNumber;
      })[]
    >;

    getClientInfoByPublisher(
      overrides?: CallOverrides
    ): Promise<
      ([BigNumber, string, string, string, string, BigNumber] & {
        adId: BigNumber;
        clientAddress: string;
        clientIpfs: string;
        clientProject: string;
        clientDescription: string;
        paidETH: BigNumber;
      })[]
    >;

    isPublisher(arg0: string, overrides?: CallOverrides): Promise<boolean>;

    owner(overrides?: CallOverrides): Promise<string>;

    publisherId(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    registerAd(
      _publisherIpfs: string,
      _publisherProject: string,
      _network: string,
      _location: string,
      _x_size: BigNumberish,
      _y_size: BigNumberish,
      _mindate: BigNumberish,
      _maxdate: BigNumberish,
      _dau: BigNumberish,
      _minprice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    registerClient(
      _adId: BigNumberish,
      _clientIpfs: string,
      _clientProject: string,
      _clientDescription: string,
      overrides?: CallOverrides
    ): Promise<void>;

    registerOverClient(
      _adId: BigNumberish,
      _clientIpfs: string,
      _clientProject: string,
      _clientDescription: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setPublisher(
      _publisher: string,
      _isActive: boolean,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    AdPurchased(
      adId?: null,
      clientAddress?: null,
      clientIpfs?: null,
      price?: null,
      startTime?: null,
      guaranteeTime?: null,
      expireTime?: null
    ): TypedEventFilter<
      [BigNumber, string, string, BigNumber, BigNumber, BigNumber, BigNumber],
      {
        adId: BigNumber;
        clientAddress: string;
        clientIpfs: string;
        price: BigNumber;
        startTime: BigNumber;
        guaranteeTime: BigNumber;
        expireTime: BigNumber;
      }
    >;

    AdRegistered(
      adId?: null,
      publisher?: null,
      ipfs?: null,
      project?: null,
      network?: null,
      location?: null,
      x_size?: null,
      y_size?: null,
      mindate?: null,
      maxdate?: null,
      dau?: null,
      minprice?: null
    ): TypedEventFilter<
      [
        BigNumber,
        string,
        string,
        string,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      {
        adId: BigNumber;
        publisher: string;
        ipfs: string;
        project: string;
        network: string;
        location: string;
        x_size: BigNumber;
        y_size: BigNumber;
        mindate: BigNumber;
        maxdate: BigNumber;
        dau: BigNumber;
        minprice: BigNumber;
      }
    >;

    ClientRegistered(
      client?: null,
      adId?: null,
      clientIpfs?: null,
      clientProject?: null,
      clientDescription?: null,
      paidETH?: null
    ): TypedEventFilter<
      [string, BigNumber, string, string, string, BigNumber],
      {
        client: string;
        adId: BigNumber;
        clientIpfs: string;
        clientProject: string;
        clientDescription: string;
        paidETH: BigNumber;
      }
    >;
  };

  estimateGas: {
    adOn(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    ads(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    allowAd(
      _adId: BigNumberish,
      _clientAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    allowOverAd(
      _adId: BigNumberish,
      _clientAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    clientList(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAdInfo(
      _adId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAdStatus(
      _adId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAllAdInfo(overrides?: CallOverrides): Promise<BigNumber>;

    getClientInfo(
      _adId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getClientInfoByPublisher(overrides?: CallOverrides): Promise<BigNumber>;

    isPublisher(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    publisherId(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    registerAd(
      _publisherIpfs: string,
      _publisherProject: string,
      _network: string,
      _location: string,
      _x_size: BigNumberish,
      _y_size: BigNumberish,
      _mindate: BigNumberish,
      _maxdate: BigNumberish,
      _dau: BigNumberish,
      _minprice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    registerClient(
      _adId: BigNumberish,
      _clientIpfs: string,
      _clientProject: string,
      _clientDescription: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    registerOverClient(
      _adId: BigNumberish,
      _clientIpfs: string,
      _clientProject: string,
      _clientDescription: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setPublisher(
      _publisher: string,
      _isActive: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    adOn(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ads(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    allowAd(
      _adId: BigNumberish,
      _clientAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    allowOverAd(
      _adId: BigNumberish,
      _clientAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    clientList(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAdInfo(
      _adId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAdStatus(
      _adId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAllAdInfo(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getClientInfo(
      _adId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getClientInfoByPublisher(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isPublisher(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    publisherId(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    registerAd(
      _publisherIpfs: string,
      _publisherProject: string,
      _network: string,
      _location: string,
      _x_size: BigNumberish,
      _y_size: BigNumberish,
      _mindate: BigNumberish,
      _maxdate: BigNumberish,
      _dau: BigNumberish,
      _minprice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    registerClient(
      _adId: BigNumberish,
      _clientIpfs: string,
      _clientProject: string,
      _clientDescription: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    registerOverClient(
      _adId: BigNumberish,
      _clientIpfs: string,
      _clientProject: string,
      _clientDescription: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setPublisher(
      _publisher: string,
      _isActive: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
